{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-curso-datafactory-msp"
		},
		"ls_adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls'"
		},
		"ls_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricks'"
		},
		"ls_sql_udemy_curso_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_udemy_curso'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=server-udemy-curso-msp.database.windows.net;Initial Catalog=db-curso-udemy;User ID=marjukavic"
		},
		"ls_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://udemystoredatalake.dfs.core.windows.net/"
		},
		"ls_akv_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://akv-curso-udemy-msp.vault.azure.net/"
		},
		"ls_databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1106-204334-a98287a0"
		},
		"ls_ftp_ibge_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "ftp.ibge.gov.br/"
		},
		"trg_storage_event_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/4a2108ca-48e3-4ddb-b55b-7fabc87c12d7/resourceGroups/rg-curso-udemy/providers/Microsoft.Storage/storageAccounts/udemystoredatalake"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ingest_salesLt_SalesOrderDetail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lk_water_mark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select max(mostRecentDateTime) as mostRecentDateTime from controller.water_mark where tableName= 'SalesLT.SalesOrderDetail'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb_curso",
								"type": "DatasetReference",
								"parameters": {
									"schema": "controller",
									"tbName": "water_mark"
								}
							}
						}
					},
					{
						"name": "If_water_mark_isnull",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "lk_water_mark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(activity('lk_water_mark').output.firstRow.mostRecentDateTime)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "set_water_mark_true",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "water_mark",
										"value": {
											"value": "@activity('lk_water_mark').output.firstRow.mostRecentDateTime",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "water_mark",
										"value": {
											"value": "1900-01-01",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ingestData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If_water_mark_isnull",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from [SalesLT].[SalesOrderDetail] where ModifiedDate > '@{variables('water_mark')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrderID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesOrderID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "SalesOrderDetailID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesOrderDetailID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "OrderQty",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrderQty",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "UnitPriceDiscount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPriceDiscount",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "LineTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "LineTotal",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_curso",
								"type": "DatasetReference",
								"parameters": {
									"schema": "SalesLt",
									"tbName": "SalesOrderDetail"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"path": {
										"value": "SalesLt/SalesOrderDetail/@{utcnow('yyyyMMdd')}",
										"type": "Expression"
									},
									"fileName": {
										"value": "file-@{variables('water_mark')}.parquet",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "if_has_rows_read",
						"description": "Verifica se retorna novos registros",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ingestData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('ingestData').output.rowsRead,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "lk_mostRecentDateTime",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "Select max(ModifiedDate) as mostRecentDateTime from [SalesLT].[SalesOrderDetail]",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_sqldb_curso",
											"type": "DatasetReference",
											"parameters": {
												"schema": "SalesLT",
												"tbName": "SalesOrderDetail"
											}
										}
									}
								},
								{
									"name": "proc_update_water_mark",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "lk_mostRecentDateTime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[controller].[update_water_mark]",
										"storedProcedureParameters": {
											"mostRecentDateTime": {
												"value": {
													"value": "@activity('lk_mostRecentDateTime').output.firstRow.mostRecentDateTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tableName": {
												"value": {
													"value": "SalesLT.SalesOrderDetail",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_sql_udemy_curso",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"water_mark": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T18:29:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_curso')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_udemy_curso')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "parameter_value",
							"value": {
								"value": "@pipeline().parameters.fileName",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"variables": {
					"parameter_value": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T02:52:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline Variaveis')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "setvar_dataatual",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "now",
							"value": {
								"value": "@utcnow('yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "setvar_dynamic",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "dynamic_content",
							"value": {
								"value": "@string(contains(pipeline().parameters.p_dynamic,'abc'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "setvar_concatena",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "query",
							"value": {
								"value": "SELECT * FROM TABLE WHERE DATA_INICIO >= '@{pipeline().parameters.p_data}'",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_dynamic": {
						"type": "string"
					},
					"p_data": {
						"type": "string",
						"defaultValue": "1900-01-01"
					}
				},
				"variables": {
					"now": {
						"type": "String",
						"defaultValue": "1900-01-01"
					},
					"dynamic_content": {
						"type": "String"
					},
					"query": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T02:52:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_copy_sqldata_full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_curso",
								"type": "DatasetReference",
								"parameters": {
									"schema": "SalesLt",
									"tbName": "Product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"path": "SalesLt/Product_Full",
									"fileName": "file.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T19:27:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_curso')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_executaOutroPipeComParametro')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "parameter",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"fileName": "Teste"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-06T02:56:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/parameter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_get_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Busca informações dos arquivos e monta uma lista com as informações",
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_ftp_ibge_binary",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "Acesso_a_internet_e_posse_celular/2015/Tabelas_de_Resultados/xlsx/02_Domicilios_Particulares_Permanentes/"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FtpReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false,
								"useBinaryTransfer": true,
								"disableChunking": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T16:50:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ftp_ibge_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_ingest_ibge_acesso')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_ftp_ibge_binary",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "Acesso_a_internet_e_posse_celular/2015/Tabelas_de_Resultados/xlsx/02_Domicilios_Particulares_Permanentes/"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_binary",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": "ibge"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T16:31:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ftp_ibge_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_paralelismo_dinamico')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "DynamicRange",
								"partitionSettings": {
									"partitionColumnName": "ProductCategoryID",
									"partitionUpperBound": "",
									"partitionLowerBound": ""
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 8,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqldb_curso",
								"type": "DatasetReference",
								"parameters": {
									"schema": "SalesLt",
									"tbName": "Product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_parquet_dynamic",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"path": "SalesLt/Product_Dynamic2"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T20:33:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_curso')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_paralelismo_manual')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getCategories",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select distinct productCategoryID from SalesLT.Product",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb_curso",
								"type": "DatasetReference",
								"parameters": {
									"schema": " ",
									"tbName": " "
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ingestionParalela",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "getCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('getCategories').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "Select * from SalesLT.Product where productCategoryID = @{item().productCategoryID}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sqldb_curso",
											"type": "DatasetReference",
											"parameters": {
												"schema": " ",
												"tbName": " "
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_parquet",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"path": "SalesLt/Product_Manual",
												"fileName": {
													"value": "file_category_@{item().productCategoryID}.parquet",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T20:33:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_curso')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_transform_product_df')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform_product",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_product",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadBronzeProduct": {
										"container": "bronze",
										"path": "SalesLt/Product/20231106",
										"fileName": "file.parquet"
									},
									"WriteProductSilver": {
										"container": "silver",
										"path": "SalesLt/Product_Dataflow"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-11-07T14:24:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transform_product')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_parquet_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_parquet_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ftp_ibge_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ftp_ibge",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ftp_ibge')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb_curso')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_udemy_curso",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"tbName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tbName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_udemy_curso')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_akv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_akv_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6504789717952119.19.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ftp_ibge')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('ls_ftp_ibge_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_udemy_curso')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_udemy_curso_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_akv",
							"type": "LinkedServiceReference"
						},
						"secretName": "pwd-dbsql-curso-msp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_akv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trg_product_ingest')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_copy_sqldata_full",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-11-07T19:20:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_copy_sqldata_full')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trg_storage_event')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_copy_sqldata_full",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/stage/blobs/events",
					"blobPathEndsWith": "product.txt",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('trg_storage_event_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_copy_sqldata_full')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ir-autoresolve')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Brazil South",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ir-selfhosted-azure')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_product')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_parquet",
								"type": "DatasetReference"
							},
							"name": "ReadBronzeProduct"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_parquet_sink",
								"type": "DatasetReference"
							},
							"name": "WriteProductSilver"
						}
					],
					"transformations": [
						{
							"name": "NewColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as integer,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          Color as string,",
						"          StandardCost as decimal(19,4),",
						"          ListPrice as decimal(19,4),",
						"          Size as string,",
						"          Weight as decimal(8,2),",
						"          ProductCategoryID as integer,",
						"          ProductModelID as integer,",
						"          SellStartDate as timestamp,",
						"          SellEndDate as timestamp,",
						"          DiscontinuedDate as timestamp,",
						"          ThumbNailPhoto as binary,",
						"          ThumbnailPhotoFileName as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ReadBronzeProduct",
						"ReadBronzeProduct derive(ModifiedDateSilver = currentTimestamp(),",
						"          Color = case(isNull(Color), 'NOT INFORMED', upper(Color))) ~> NewColumns",
						"NewColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProductID,",
						"          Name,",
						"          ProductNumber,",
						"          Color,",
						"          StandardCost,",
						"          ListPrice,",
						"          Size,",
						"          Weight,",
						"          ProductCategoryID,",
						"          ProductModelID,",
						"          SellStartDate,",
						"          SellEndDate,",
						"          DiscontinuedDate,",
						"          ThumbNailPhoto,",
						"          ThumbnailPhotoFileName,",
						"          rowguid,",
						"          ModifiedDateSource = ModifiedDate,",
						"          ModifiedDateSilver",
						"     )) ~> WriteProductSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_parquet_sink')]"
			]
		}
	]
}